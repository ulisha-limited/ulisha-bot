# Your bot name goes here
PROJECT_CANIS_ALIAS=Canis
# automatically reboot canis, if a potential memory leak has been detected,
# or the memory usage was just way too high
PROJECT_AUTO_RESTART=false
PROJECT_THRESHOLD_MEMORY=1024
PROJECT_MAX_MEMORY=2048 # 2GB
PROJECT_AUTO_DOWNLOAD_MEDIA=true
PROJECT_MAX_DOWNLOAD_MEDIA=25 # 25MB

P_QUEUE_CONCURRENCY_COUNT=2

PHISHTANK_ENABLE=true
PHISHTANK_UPDATE_HOUR=3 # default run at 03:00 UTC
PHISHTANK_AUTO_UPDATE=true

SENTRY_DNS=

# whether to enable debug mode
# in debug mode, additional logging is enabled
DEBUG=true

# the command prefix used to trigger bot commands
COMMAND_PREFIX=!

# the bot can be configured to respond to commands with or without a prefix
# if COMMAND_PREFIX_LESS is true, the bot will respond to commands without a prefix
COMMAND_PREFIX_LESS=true

# the port on which the server will run
PORT=3000

# the path to the Chrome executable for Puppeteer
# Windows (Edge)
# PUPPETEER_EXEC_PATH=C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe
# Windows (Firefox)
# PUPPETEER_EXEC_PATH=C:\\Program Files\\Mozilla Firefox\\firefox.exe
# Linux (Firefox)
# PUPPETEER_EXEC_PATH=/usr/bin/firefox
# Windows (Brave)
# PUPPETEER_EXEC_PATH=C:\\Program Files\\BraveSoftware\\Brave-Browser\\Application\\brave.exe
# Linux (Brave)
# PUPPETEER_EXEC_PATH=/usr/bin/brave-browser
# Windows (Chrome)
# PUPPETEER_EXEC_PATH=C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe
# Linux
PUPPETEER_EXEC_PATH=/opt/google/chrome/google-chrome

# automatically reloads commands as they are edited
AUTO_RELOAD=false

# the database connection URL
DATABASE_URL=mysql://root@127.0.0.1:3306/project_canis
REDIS_URL=redis://127.0.0.1:6379

# the AI provider to use for AI model access
# currently canis support openrouter and groq
# its not mandatory to have set both API keys, you can use only one of them
# if you want to use openrouter, set OPEN_ROUTER_API_KEY
# if you want to use groq, set GROQ_API_KEY
AI_PROVIDER=groq

# the OpenRouter API key for AI model access
# openrouter: https://openrouter.ai/
OPEN_ROUTER_API_KEY=
OPEN_ROUTER_MODEL=moonshotai/kimi-k2:free

# the Groq API key for AI model access
# groq: https://groq.com/
GROQ_API_KEY=
GROQ_MODEL=meta-llama/llama-4-scout-17b-16e-instruct

# the Gemini API key for AI model access
# gemini: https://aistudio.google.com/apikey
GEMINI_API_KEY=
GEMINI_MODEL=gemini-2.0-flash-001

# the OpenAI API key for AI model access
# openai: https://platform.openai.com/
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4o

# the Ollama model
# ollama: https://ollama.com/
OLLAMA_MODEL=llama3.1

ALLOW_QUERY_CACHING=true
QUERY_CACHING_COUNT=1000
QUERY_CACHING_TTL=3600

# the shell to use for executing commands
# this should be a valid shell path, e.g., /bin/bash, /bin/zsh
EXEC_SHELL=/bin/bash

# Your Wakatime API keys
# (optional) else the wakatime command aint going to work
WAKATIME_API_KEY=

# the number of attemp axios will do if the request
# failed
AXIOS_MAX_RETRY=3
AXIOS_USER_AGENT=Canis/11.0.0
AXIOS_TIMEOUT=30000
AXIOS_ORIGIN=
AXIOS_HOST=
